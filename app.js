console.log("üéÆ App.js started!");

let tg = window.Telegram.WebApp;
let game = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram
function initTelegram() {
    try {
        tg.expand();
        tg.ready();
        console.log("‚úÖ Telegram initialized");
    } catch (e) {
        console.error("‚ùå Telegram init error:", e);
    }
}

// –ü—Ä–æ—Å—Ç–æ–π –¥–≤–∏–∂–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∞
class SimpleGame {
    constructor() {
        this.currentScreen = 'welcome';
        this.specialization = null;
        console.log("üé≤ SimpleGame created");
    }

    chooseSpecialization(spec) {
        console.log("üéØ Choosing specialization:", spec);
        this.specialization = spec;
        this.currentScreen = 'stage1';
        this.render();
        return true;
    }

    render() {
        console.log("üîÑ Rendering screen:", this.currentScreen);
        const app = document.getElementById('app');
        
        if (!app) {
            console.error("‚ùå App element not found!");
            return;
        }

        switch(this.currentScreen) {
            case 'welcome':
                app.innerHTML = this.renderWelcome();
                break;
            case 'specialization':
                app.innerHTML = this.renderSpecialization();
                break;
            case 'stage1':
                app.innerHTML = this.renderStage1();
                break;
        }
    }

    renderWelcome() {
        return `
            <div class="screen welcome-screen">
                <h1>üéØ –î–ï–ë–ê–ì –†–ï–ñ–ò–ú</h1>
                <p>–ï—Å–ª–∏ –≤–∏–¥–∏—à—å —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç - –±–∞–∑–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!</p>
                <button onclick="game.showScreen('specialization')" class="btn-primary">
                    –¢–µ—Å—Ç –ø–µ—Ä–µ—Ö–æ–¥–∞
                </button>
                <div style="margin-top: 20px; padding: 10px; background: #ff4444; color: white;">
                    <strong>–û—Ç–∫—Ä–æ–π –∫–æ–Ω—Å–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (F12) –∏ –ø–æ—Å–º–æ—Ç—Ä–∏ –ª–æ–≥–∏!</strong>
                </div>
            </div>
        `;
    }

    renderSpecialization() {
        return `
            <div class="screen specialization-screen">
                <h2>–í—ã–±–µ—Ä–∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é (–¢–µ—Å—Ç)</h2>
                <div class="specialization-cards">
                    <div class="spec-card" onclick="testClick('physicist')">
                        <h3>üßÆ –§–∏–∑–∏–∫-—Ç–µ–æ—Ä–µ—Ç–∏–∫</h3>
                        <p>–ö–ª–∏–∫–Ω–∏ —Å—é–¥–∞ –∏ –ø—Ä–æ–≤–µ—Ä—å –∫–æ–Ω—Å–æ–ª—å</p>
                    </div>
                    <div class="spec-card" onclick="testClick('engineer')">
                        <h3>üîß –ö–∏–±–µ—Ä-–∏–Ω–∂–µ–Ω–µ—Ä</h3>
                        <p>–î–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –ª–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª–∏</p>
                    </div>
                </div>
                <div id="debug-output" style="margin-top: 20px; padding: 10px; background: #333; color: #0f0;"></div>
            </div>
        `;
    }

    renderStage1() {
        return `
            <div class="screen stage-screen">
                <h2>üéâ –£–°–ü–ï–•!</h2>
                <p>–¢—ã –≤—ã–±—Ä–∞–ª: ${this.specialization}</p>
                <p>–ù–∞–≤–∏–≥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!</p>
                <button onclick="game.showScreen('welcome')" class="btn-primary">
                    –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
                </button>
            </div>
        `;
    }

    showScreen(screen) {
        console.log("üîÑ Changing screen to:", screen);
        this.currentScreen = screen;
        this.render();
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è
window.testClick = function(spec) {
    console.log("üéØ testClick called with:", spec);
    const debugOutput = document.getElementById('debug-output');
    if (debugOutput) {
        debugOutput.innerHTML = `–ö–ª–∏–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${spec} | –í—Ä–µ–º—è: ${new Date().toLocaleTimeString()}`;
    }
    
    if (window.game && window.game.chooseSpecialization) {
        window.game.chooseSpecialization(spec);
    } else {
        console.error("‚ùå Game not initialized!");
        debugOutput.innerHTML += '<br>‚ùå Game object not found!';
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    console.log("üìÑ DOM loaded!");
    
    initTelegram();
    
    // –°–æ–∑–¥–∞—ë–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∏–≥—Ä—É
    window.game = new SimpleGame();
    console.log("üé≤ Game instance created:", window.game);
    
    // –ü–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä
    window.game.render();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
    const app = document.getElementById('app');
    console.log("üì± App element:", app);
});